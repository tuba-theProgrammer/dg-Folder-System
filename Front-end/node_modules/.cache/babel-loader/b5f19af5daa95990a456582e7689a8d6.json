{"ast":null,"code":"var _jsxFileName = \"/home/tuba/Work-Folder/MTechub-Assigned Task/dg-Folder-System/Front-end/src/examples/Navbars/DefaultNavbar/DefaultNavbarLink.js\";\nimport PropTypes from \"prop-types\";\n\n// react-router-dom components\nimport { Link } from \"react-router-dom\";\n\n// @mui material components\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DefaultNavbarLink(_ref) {\n  let {\n    icon,\n    name,\n    route,\n    light\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MDBox, {\n    component: Link,\n    to: route,\n    mx: 1,\n    p: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    sx: {\n      cursor: \"pointer\",\n      userSelect: \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      sx: {\n        color: _ref2 => {\n          let {\n            palette: {\n              white,\n              secondary\n            }\n          } = _ref2;\n          return light ? white.main : secondary.main;\n        },\n        verticalAlign: \"middle\"\n      },\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n      variant: \"button\",\n      fontWeight: \"regular\",\n      color: light ? \"white\" : \"dark\",\n      textTransform: \"capitalize\",\n      sx: {\n        width: \"100%\",\n        lineHeight: 0\n      },\n      children: [\"\\xA0\", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n// Typechecking props for the DefaultNavbarLink\n_c = DefaultNavbarLink;\nDefaultNavbarLink.propTypes = {\n  icon: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  route: PropTypes.string.isRequired,\n  light: PropTypes.bool.isRequired\n};\nexport default DefaultNavbarLink;\nvar _c;\n$RefreshReg$(_c, \"DefaultNavbarLink\");","map":{"version":3,"names":["PropTypes","Link","Icon","MDBox","MDTypography","DefaultNavbarLink","icon","name","route","light","cursor","userSelect","color","palette","white","secondary","main","verticalAlign","width","lineHeight","propTypes","string","isRequired","bool"],"sources":["/home/tuba/Work-Folder/MTechub-Assigned Task/dg-Folder-System/Front-end/src/examples/Navbars/DefaultNavbar/DefaultNavbarLink.js"],"sourcesContent":["\nimport PropTypes from \"prop-types\";\n\n// react-router-dom components\nimport { Link } from \"react-router-dom\";\n\n// @mui material components\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\nfunction DefaultNavbarLink({ icon, name, route, light }) {\n  return (\n    <MDBox\n      component={Link}\n      to={route}\n      mx={1}\n      p={1}\n      display=\"flex\"\n      alignItems=\"center\"\n      sx={{ cursor: \"pointer\", userSelect: \"none\" }}\n    >\n      <Icon\n        sx={{\n          color: ({ palette: { white, secondary } }) => (light ? white.main : secondary.main),\n          verticalAlign: \"middle\",\n        }}\n      >\n        {icon}\n      </Icon>\n      <MDTypography\n        variant=\"button\"\n        fontWeight=\"regular\"\n        color={light ? \"white\" : \"dark\"}\n        textTransform=\"capitalize\"\n        sx={{ width: \"100%\", lineHeight: 0 }}\n      >\n        &nbsp;{name}\n      </MDTypography>\n    </MDBox>\n  );\n}\n\n// Typechecking props for the DefaultNavbarLink\nDefaultNavbarLink.propTypes = {\n  icon: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  route: PropTypes.string.isRequired,\n  light: PropTypes.bool.isRequired,\n};\n\nexport default DefaultNavbarLink;\n"],"mappings":";AACA,OAAOA,SAAS,MAAM,YAAY;;AAElC;AACA,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA,OAAOC,IAAI,MAAM,oBAAoB;;AAErC;AACA,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,YAAY,MAAM,yBAAyB;AAAC;AAEnD,SAASC,iBAAiB,OAA+B;EAAA,IAA9B;IAAEC,IAAI;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAM,CAAC;EACrD,oBACE,QAAC,KAAK;IACJ,SAAS,EAAER,IAAK;IAChB,EAAE,EAAEO,KAAM;IACV,EAAE,EAAE,CAAE;IACN,CAAC,EAAE,CAAE;IACL,OAAO,EAAC,MAAM;IACd,UAAU,EAAC,QAAQ;IACnB,EAAE,EAAE;MAAEE,MAAM,EAAE,SAAS;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAA,wBAE9C,QAAC,IAAI;MACH,EAAE,EAAE;QACFC,KAAK,EAAE;UAAA,IAAC;YAAEC,OAAO,EAAE;cAAEC,KAAK;cAAEC;YAAU;UAAE,CAAC;UAAA,OAAMN,KAAK,GAAGK,KAAK,CAACE,IAAI,GAAGD,SAAS,CAACC,IAAI;QAAA,CAAC;QACnFC,aAAa,EAAE;MACjB,CAAE;MAAA,UAEDX;IAAI;MAAA;MAAA;MAAA;IAAA,QACA,eACP,QAAC,YAAY;MACX,OAAO,EAAC,QAAQ;MAChB,UAAU,EAAC,SAAS;MACpB,KAAK,EAAEG,KAAK,GAAG,OAAO,GAAG,MAAO;MAChC,aAAa,EAAC,YAAY;MAC1B,EAAE,EAAE;QAAES,KAAK,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAE,CAAE;MAAA,mBAE9BZ,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEZ;;AAEA;AAAA,KAhCSF,iBAAiB;AAiC1BA,iBAAiB,CAACe,SAAS,GAAG;EAC5Bd,IAAI,EAAEN,SAAS,CAACqB,MAAM,CAACC,UAAU;EACjCf,IAAI,EAAEP,SAAS,CAACqB,MAAM,CAACC,UAAU;EACjCd,KAAK,EAAER,SAAS,CAACqB,MAAM,CAACC,UAAU;EAClCb,KAAK,EAAET,SAAS,CAACuB,IAAI,CAACD;AACxB,CAAC;AAED,eAAejB,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}