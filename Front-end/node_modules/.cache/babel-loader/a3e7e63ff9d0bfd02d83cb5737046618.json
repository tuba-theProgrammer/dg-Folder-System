{"ast":null,"code":"var _jsxFileName = \"/home/tuba/Work-Folder/MTechub-Assigned Task/dg-Folder-System/Front-end/src/examples/Cards/InfoCards/DefaultInfoCard/index.js\";\n/**\n=========================================================\n* Material Dashboard 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DefaultInfoCard(_ref) {\n  let {\n    color,\n    icon,\n    title,\n    description,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      p: 2,\n      mx: 3,\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(MDBox, {\n        display: \"grid\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        bgColor: color,\n        color: \"white\",\n        width: \"4rem\",\n        height: \"4rem\",\n        shadow: \"md\",\n        borderRadius: \"lg\",\n        variant: \"gradient\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          fontSize: \"default\",\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      pb: 2,\n      px: 2,\n      textAlign: \"center\",\n      lineHeight: 1.25,\n      children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"h6\",\n        fontWeight: \"medium\",\n        textTransform: \"capitalize\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), description && /*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"caption\",\n        color: \"text\",\n        fontWeight: \"regular\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), description && !value ? null : /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }, this), value && /*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"h5\",\n        fontWeight: \"medium\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n// Setting default values for the props of DefaultInfoCard\n_c = DefaultInfoCard;\nDefaultInfoCard.defaultProps = {\n  color: \"info\",\n  value: \"\",\n  description: \"\"\n};\n\n// Typechecking props for the DefaultInfoCard\nDefaultInfoCard.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nexport default DefaultInfoCard;\nvar _c;\n$RefreshReg$(_c, \"DefaultInfoCard\");","map":{"version":3,"names":["PropTypes","Card","Divider","Icon","MDBox","MDTypography","DefaultInfoCard","color","icon","title","description","value","defaultProps","propTypes","oneOf","node","isRequired","string","oneOfType","number"],"sources":["/home/tuba/Work-Folder/MTechub-Assigned Task/dg-Folder-System/Front-end/src/examples/Cards/InfoCards/DefaultInfoCard/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\nfunction DefaultInfoCard({ color, icon, title, description, value }) {\n  return (\n    <Card>\n      <MDBox p={2} mx={3} display=\"flex\" justifyContent=\"center\">\n        <MDBox\n          display=\"grid\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          bgColor={color}\n          color=\"white\"\n          width=\"4rem\"\n          height=\"4rem\"\n          shadow=\"md\"\n          borderRadius=\"lg\"\n          variant=\"gradient\"\n        >\n          <Icon fontSize=\"default\">{icon}</Icon>\n        </MDBox>\n      </MDBox>\n      <MDBox pb={2} px={2} textAlign=\"center\" lineHeight={1.25}>\n        <MDTypography variant=\"h6\" fontWeight=\"medium\" textTransform=\"capitalize\">\n          {title}\n        </MDTypography>\n        {description && (\n          <MDTypography variant=\"caption\" color=\"text\" fontWeight=\"regular\">\n            {description}\n          </MDTypography>\n        )}\n        {description && !value ? null : <Divider />}\n        {value && (\n          <MDTypography variant=\"h5\" fontWeight=\"medium\">\n            {value}\n          </MDTypography>\n        )}\n      </MDBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of DefaultInfoCard\nDefaultInfoCard.defaultProps = {\n  color: \"info\",\n  value: \"\",\n  description: \"\",\n};\n\n// Typechecking props for the DefaultInfoCard\nDefaultInfoCard.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default DefaultInfoCard;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,SAAS,MAAM,YAAY;;AAElC;AACA,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,oBAAoB;;AAErC;AACA,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,YAAY,MAAM,yBAAyB;AAAC;AAEnD,SAASC,eAAe,OAA6C;EAAA,IAA5C;IAAEC,KAAK;IAAEC,IAAI;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAM,CAAC;EACjE,oBACE,QAAC,IAAI;IAAA,wBACH,QAAC,KAAK;MAAC,CAAC,EAAE,CAAE;MAAC,EAAE,EAAE,CAAE;MAAC,OAAO,EAAC,MAAM;MAAC,cAAc,EAAC,QAAQ;MAAA,uBACxD,QAAC,KAAK;QACJ,OAAO,EAAC,MAAM;QACd,cAAc,EAAC,QAAQ;QACvB,UAAU,EAAC,QAAQ;QACnB,OAAO,EAAEJ,KAAM;QACf,KAAK,EAAC,OAAO;QACb,KAAK,EAAC,MAAM;QACZ,MAAM,EAAC,MAAM;QACb,MAAM,EAAC,IAAI;QACX,YAAY,EAAC,IAAI;QACjB,OAAO,EAAC,UAAU;QAAA,uBAElB,QAAC,IAAI;UAAC,QAAQ,EAAC,SAAS;UAAA,UAAEC;QAAI;UAAA;UAAA;UAAA;QAAA;MAAQ;QAAA;QAAA;QAAA;MAAA;IAChC;MAAA;MAAA;MAAA;IAAA,QACF,eACR,QAAC,KAAK;MAAC,EAAE,EAAE,CAAE;MAAC,EAAE,EAAE,CAAE;MAAC,SAAS,EAAC,QAAQ;MAAC,UAAU,EAAE,IAAK;MAAA,wBACvD,QAAC,YAAY;QAAC,OAAO,EAAC,IAAI;QAAC,UAAU,EAAC,QAAQ;QAAC,aAAa,EAAC,YAAY;QAAA,UACtEC;MAAK;QAAA;QAAA;QAAA;MAAA,QACO,EACdC,WAAW,iBACV,QAAC,YAAY;QAAC,OAAO,EAAC,SAAS;QAAC,KAAK,EAAC,MAAM;QAAC,UAAU,EAAC,SAAS;QAAA,UAC9DA;MAAW;QAAA;QAAA;QAAA;MAAA,QAEf,EACAA,WAAW,IAAI,CAACC,KAAK,GAAG,IAAI,gBAAG,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,EAC1CA,KAAK,iBACJ,QAAC,YAAY;QAAC,OAAO,EAAC,IAAI;QAAC,UAAU,EAAC,QAAQ;QAAA,UAC3CA;MAAK;QAAA;QAAA;QAAA;MAAA,QAET;IAAA;MAAA;MAAA;MAAA;IAAA,QACK;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEX;;AAEA;AAAA,KAvCSL,eAAe;AAwCxBA,eAAe,CAACM,YAAY,GAAG;EAC7BL,KAAK,EAAE,MAAM;EACbI,KAAK,EAAE,EAAE;EACTD,WAAW,EAAE;AACf,CAAC;;AAED;AACAJ,eAAe,CAACO,SAAS,GAAG;EAC1BN,KAAK,EAAEP,SAAS,CAACc,KAAK,CAAC,CAAC,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;EAC/FN,IAAI,EAAER,SAAS,CAACe,IAAI,CAACC,UAAU;EAC/BP,KAAK,EAAET,SAAS,CAACiB,MAAM,CAACD,UAAU;EAClCN,WAAW,EAAEV,SAAS,CAACiB,MAAM;EAC7BN,KAAK,EAAEX,SAAS,CAACkB,SAAS,CAAC,CAAClB,SAAS,CAACiB,MAAM,EAAEjB,SAAS,CAACmB,MAAM,CAAC;AACjE,CAAC;AAED,eAAeb,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module"}