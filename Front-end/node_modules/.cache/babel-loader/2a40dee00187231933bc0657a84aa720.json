{"ast":null,"code":"const SendRequestToBackend = (Server_url, requestType, requestRoute, requestData) => {\n  if (requestType == \"GET\") {\n    const Getdata = fetch(Server_url + requestRoute).then(response => response.json()).then(data => {\n      //   console.log(data)\n      return data;\n    });\n    return Getdata;\n  } else if (requestType == \"POST\") {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestData)\n    };\n    const PostData = fetch(Server_url + requestRoute, requestOptions).then(response => response.json()).then(data => {\n      // console.log(\"here is response data \",data)\n      return data;\n    });\n    return PostData;\n  }\n};\n_c = SendRequestToBackend;\nexport { SendRequestToBackend };\nvar _c;\n$RefreshReg$(_c, \"SendRequestToBackend\");","map":{"version":3,"names":["SendRequestToBackend","Server_url","requestType","requestRoute","requestData","Getdata","fetch","then","response","json","data","requestOptions","method","headers","body","JSON","stringify","PostData"],"sources":["/home/tuba/Work-Folder/MTechub-Assigned Task/dg-Folder-System/Front-end/src/RequestManager/Request-manager.js"],"sourcesContent":["const SendRequestToBackend = (Server_url,requestType, requestRoute, requestData)=>{\n\n   if(requestType==\"GET\"){\n   const Getdata =  fetch(Server_url+requestRoute)\n    .then(response => response.json())\n    .then(data => {\n     //   console.log(data)\n            return data\n    });\n      return Getdata\n    \n   }else if (requestType==\"POST\"){\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(requestData)\n    };\n  const PostData=  fetch(Server_url+requestRoute, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n  // console.log(\"here is response data \",data)\n   return data\n        });\n\n      return PostData\n\n   }\n}\n\n\nexport {SendRequestToBackend}"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,CAACC,UAAU,EAACC,WAAW,EAAEC,YAAY,EAAEC,WAAW,KAAG;EAE/E,IAAGF,WAAW,IAAE,KAAK,EAAC;IACtB,MAAMG,OAAO,GAAIC,KAAK,CAACL,UAAU,GAACE,YAAY,CAAC,CAC7CI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACb;MACO,OAAOA,IAAI;IACnB,CAAC,CAAC;IACA,OAAOL,OAAO;EAEjB,CAAC,MAAK,IAAIH,WAAW,IAAE,MAAM,EAAC;IAC7B,MAAMS,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW;IACpC,CAAC;IACH,MAAMa,QAAQ,GAAGX,KAAK,CAACL,UAAU,GAACE,YAAY,EAAEQ,cAAc,CAAC,CACxDJ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACpB;MACC,OAAOA,IAAI;IACN,CAAC,CAAC;IAEJ,OAAOO,QAAQ;EAElB;AACH,CAAC;AAAA,KA3BKjB,oBAAoB;AA8B1B,SAAQA,oBAAoB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}