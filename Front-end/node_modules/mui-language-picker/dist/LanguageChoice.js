"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LanguageChoice = void 0;
var react_1 = __importStar(require("react"));
var material_1 = require("@mui/material");
var lodash_1 = require("lodash");
var GrowingSpacer_1 = require("./GrowingSpacer");
var getDisplayName_1 = require("./getDisplayName");
function LanguageChoice(props) {
    var list = props.list, langTags = props.langTags, scriptName = props.scriptName, secondary = props.secondary, t = props.t, choose = props.choose;
    var displayName = props.displayName;
    var dense = (0, react_1.useState)(true)[0];
    var _a = (0, react_1.useState)(window.innerHeight), height = _a[0], setHeight = _a[1];
    var handleChoose = function (tag) { return function () {
        choose(tag);
    }; };
    var handleKeydown = function (tag) { return function (e) {
        if (e.keyCode === 32 || e.keyCode === 13) {
            choose(tag);
        }
    }; };
    (0, react_1.useEffect)(function () {
        var handleResize = (0, lodash_1.debounce)(function () { return setHeight(window.innerHeight); }, 100);
        window.addEventListener('resize', handleResize);
        return function () {
            window.removeEventListener('resize', handleResize);
        };
    }, []);
    var scriptDetail = function (tag) {
        var tagParts = tag.tag.split('-');
        return tagParts.length > 1 && tagParts[1].length === 4
            ? t.inScript.replace('$1', scriptName[tagParts[1]])
            : '';
    };
    var detail = function (tag) {
        return (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement(material_1.Typography, { component: 'span' }, t.languageOf
                .replace('$1', tag.regionname ? tag.regionname : '')
                .replace('$2', scriptDetail(tag))),
            react_1.default.createElement("br", null),
            react_1.default.createElement(material_1.Typography, { component: 'span' }, tag.names ? tag.names.join(', ') : '')));
    };
    var langElems = function (refList, refTags) {
        return refList.map(function (r, i) {
            var tag = refTags[r];
            return (react_1.default.createElement(material_1.ListItem, { key: "".concat(tag.tag, " ").concat(i), button: true, onClick: handleChoose(tag), onKeyDown: handleKeydown(tag) },
                react_1.default.createElement(material_1.ListItemText, { primary: react_1.default.createElement(material_1.Box, { sx: { display: 'flex' } },
                        react_1.default.createElement(material_1.Typography, null, (0, getDisplayName_1.getDisplayName)(tag.name, tag, displayName)),
                        react_1.default.createElement(GrowingSpacer_1.GrowingSpacer, null),
                        react_1.default.createElement(material_1.Typography, null, tag.tag)), secondary: secondary ? detail(tag) : null })));
        });
    };
    return (react_1.default.createElement(material_1.Box, { sx: { flexGrow: 1, maxWidth: 752 } },
        react_1.default.createElement(material_1.Box, { sx: { backgroundColor: 'background.paper' } },
            react_1.default.createElement(material_1.List, { dense: dense, sx: { overflowY: 'scroll' }, style: { maxHeight: Math.max(height - 450, 200) } }, langElems(list, langTags)))));
}
exports.LanguageChoice = LanguageChoice;
exports.default = LanguageChoice;
